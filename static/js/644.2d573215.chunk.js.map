{"version":3,"file":"static/js/644.2d573215.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.js","services/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MoviesList_link__8rTGX\",\"container\":\"MoviesList_container__0JGj2\",\"gallery\":\"MoviesList_gallery__Nw0Bb\",\"item\":\"MoviesList_item__eePYv\",\"name\":\"MoviesList_name__iqYfX\"};","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport styles from './MoviesList.module.css';\n// import {\n//   MoviesGallegy,\n//   Container,\n//   MovieName,\n//   MovieItem,\n//   Link,\n// } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const poster = poster_path => {\n    if (poster_path === null) {\n      return 'https://via.placeholder.com/300sx450.jpg';\n    }\n    return `https://image.tmdb.org/t/p/w300${poster_path}`;\n  };\n  return (\n    <div className={styles.container}>\n      <ul className={styles.gallery}>\n        {movies.map(\n          ({ id, original_title, original_name, name, title, poster_path }) => (\n            <li key={id} className={styles.item}>\n              <NavLink\n                to={`/movies/${id}`}\n                state={{ from: location }}\n                className={styles.link}\n              >\n                <img\n                  src={`${poster(poster_path)}`}\n                  alt={`${title || original_title || name}`}\n                />\n                <p className={styles.name}>{original_title || original_name}</p>\n              </NavLink>\n            </li>\n          )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SearchBar_container__xwaer\",\"input\":\"SearchBar_input__bIy50\",\"button\":\"SearchBar_button__T7RTc\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SearchBar.module.css';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [movieName, setMovieName] = useState('');\n\n  const inputHandler = e => {\n    setMovieName(e.target.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (movieName === '') {\n      alert('Please enter something');\n      return;\n    }\n\n    onSubmit(movieName);\n    setMovieName('');\n  };\n\n  return (\n    <div className={styles.container}>\n      <form onSubmit={handleSubmit}>\n        <input\n          value={movieName}\n          onChange={inputHandler}\n          className={styles.input}\n        />\n        <button type=\"submit\" className={styles.button}>\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { Outlet, useNavigate, useSearchParams } from 'react-router-dom';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { fetchMovieByName } from 'services/fetchApi';\n\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const handleFormSubmit = search => {\n    setSearchParams({ query: search });\n    setError(null);\n  };\n\n  useEffect(() => {\n    if (query === null) return;\n    async function getMovieByName() {\n      try {\n        const movieData = await fetchMovieByName(query);\n        setMovies(movieData.results);\n\n        if (movieData.results.length === 0) {\n          alert(`${query} not found`);\n          return;\n        } else {\n          navigate(`/movies/?query=${query}`);\n        }\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getMovieByName();\n  }, [navigate, query]);\n\n  return (\n    <main>\n      {error && <p>Try again</p>}\n      <SearchBar onSubmit={handleFormSubmit} />\n\n      {movies && <MoviesList movies={movies} />}\n\n      <Outlet />\n    </main>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '55a2d7d76d61e3157b45a39f51d021cb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get('/trending/all/day', { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieByName(movieName) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: movieName,\n  };\n\n  const response = await axios.get(`/search/movie`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchCast(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/credits`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchReviews(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/reviews`, { params });\n  const data = response.data;\n\n  return data;\n}\n"],"names":["MoviesList","movies","location","useLocation","poster","poster_path","className","styles","map","id","original_title","original_name","name","title","to","state","from","src","alt","SearchBar","onSubmit","useState","movieName","setMovieName","e","preventDefault","alert","value","onChange","target","toLowerCase","trim","type","setMovies","error","setError","navigate","useNavigate","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovieByName","movieData","results","length","getMovieByName","search","API_KEY","fetchTrendingMovies","params","api_key","language","axios","response","data","fetchMovieById","movieId","fetchCast","fetchReviews"],"sourceRoot":""}