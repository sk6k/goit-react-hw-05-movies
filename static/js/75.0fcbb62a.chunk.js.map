{"version":3,"file":"static/js/75.0fcbb62a.chunk.js","mappings":"0LACA,EAAuB,yBAAvB,EAA4D,8BAA5D,EAAoG,4BAApG,EAAuI,yBAAvI,EAAuK,yB,SCW1JA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACXC,EAAS,SAAAC,GACb,OAAoB,OAAhBA,EACK,2CAEH,kCAAN,OAAyCA,EAC1C,EACD,OACE,gBAAKC,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGN,EAAOO,KACN,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,cAAeC,EAAtC,EAAsCA,KAAMC,EAA5C,EAA4CA,MAAOR,EAAnD,EAAmDA,YAAnD,OACE,eAAaC,UAAWC,EAAxB,UACE,UAAC,KAAD,CACEO,GAAE,kBAAaL,GACfM,MAAO,CAAEC,KAAMd,GACfI,UAAWC,EAHb,WAKE,gBACEU,IAAG,UAAKb,EAAOC,IACfa,IAAG,UAAKL,GAASH,GAAkBE,MAErC,cAAGN,UAAWC,EAAd,SAA4BG,GAAkBC,QAVzCF,EADX,OAmBT,C,wGCZD,UA3Ba,WACX,OAA4CU,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAAiB,mCAAG,qGACLC,EAAAA,EAAAA,MADK,OAClBC,EADkB,OAExBN,EAAkBM,EAAKC,SAFC,2CAAH,qDAIvBH,GAID,CAHC,MAAOH,GACPC,EAASD,EACV,CAEF,GAAE,KAGD,4BACGA,IAAS,sCACV,4CAECF,IAAkB,SAAC,IAAD,CAAYnB,OAAQmB,MAG5C,C,8LC3BKS,EAAU,mCAGT,SAAeH,IAAtB,4CAAO,OAAP,oBAAO,+FACCI,EAAS,CACbC,QAASF,EACTG,SAAU,SAHP,SAMkBC,EAAAA,EAAAA,IAAU,oBAAqB,CAAEH,OAAAA,IANnD,cAMCI,EAND,OAOCP,EAAOO,EAASP,KAPjB,kBASEA,GATF,kEAYA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kFACCN,EAAS,CACbC,QAASF,EACTG,SAAU,SAHP,SAMkBC,EAAAA,EAAAA,IAAA,iBAAoBG,GAAW,CAAEN,OAAAA,IANnD,cAMCI,EAND,OAOCP,EAAOO,EAASP,KAPjB,kBASEA,GATF,kEAYA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCR,EAAS,CACbC,QAASF,EACTG,SAAU,QACVO,MAAOD,GAJJ,SAOkBL,EAAAA,EAAAA,IAAA,gBAA2B,CAAEH,OAAAA,IAP/C,cAOCI,EAPD,OAQCP,EAAOO,EAASP,KARjB,kBAUEA,GAVF,kEAaA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAyBJ,GAAzB,kFACCN,EAAS,CACbC,QAASF,EACTG,SAAU,SAHP,SAMkBC,EAAAA,EAAAA,IAAA,iBAAoBG,EAApB,YAAuC,CAAEN,OAAAA,IAN3D,cAMCI,EAND,OAOCP,EAAOO,EAASP,KAPjB,kBASEA,GATF,kEAYA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA4BL,GAA5B,kFACCN,EAAS,CACbC,QAASF,EACTG,SAAU,SAHP,SAMkBC,EAAAA,EAAAA,IAAA,iBAAoBG,EAApB,YAAuC,CAAEN,OAAAA,IAN3D,cAMCI,EAND,OAOCP,EAAOO,EAASP,KAPjB,kBASEA,GATF,kEAnDPM,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/Home/Home.js","services/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MoviesList_link__8rTGX\",\"container\":\"MoviesList_container__0JGj2\",\"gallery\":\"MoviesList_gallery__Nw0Bb\",\"item\":\"MoviesList_item__eePYv\",\"name\":\"MoviesList_name__iqYfX\"};","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport styles from './MoviesList.module.css';\n// import {\n//   MoviesGallegy,\n//   Container,\n//   MovieName,\n//   MovieItem,\n//   Link,\n// } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const poster = poster_path => {\n    if (poster_path === null) {\n      return 'https://via.placeholder.com/300sx450.jpg';\n    }\n    return `https://image.tmdb.org/t/p/w300${poster_path}`;\n  };\n  return (\n    <div className={styles.container}>\n      <ul className={styles.gallery}>\n        {movies.map(\n          ({ id, original_title, original_name, name, title, poster_path }) => (\n            <li key={id} className={styles.item}>\n              <NavLink\n                to={`/movies/${id}`}\n                state={{ from: location }}\n                className={styles.link}\n              >\n                <img\n                  src={`${poster(poster_path)}`}\n                  alt={`${title || original_title || name}`}\n                />\n                <p className={styles.name}>{original_title || original_name}</p>\n              </NavLink>\n            </li>\n          )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchTrendingMovies } from 'services/fetchApi';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    try {\n      const getTrendingMovies = async () => {\n        const data = await fetchTrendingMovies();\n        setTrendingMovies(data.results);\n      };\n      getTrendingMovies();\n    } catch (error) {\n      setError(error);\n    } finally {\n    }\n  }, []);\n\n  return (\n    <main>\n      {error && <p>Try again</p>}\n      <h2>Trending movies</h2>\n\n      {trendingMovies && <MoviesList movies={trendingMovies} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '55a2d7d76d61e3157b45a39f51d021cb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get('/trending/all/day', { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieByName(movieName) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: movieName,\n  };\n\n  const response = await axios.get(`/search/movie`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchCast(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/credits`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchReviews(movieId) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/reviews`, { params });\n  const data = response.data;\n\n  return data;\n}\n"],"names":["MoviesList","movies","location","useLocation","poster","poster_path","className","styles","map","id","original_title","original_name","name","title","to","state","from","src","alt","useState","trendingMovies","setTrendingMovies","error","setError","useEffect","getTrendingMovies","fetchTrendingMovies","data","results","API_KEY","params","api_key","language","axios","response","fetchMovieById","movieId","fetchMovieByName","movieName","query","fetchCast","fetchReviews"],"sourceRoot":""}